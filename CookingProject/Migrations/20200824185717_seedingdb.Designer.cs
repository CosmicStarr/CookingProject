// <auto-generated />
using System;
using CookingProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CookingProject.Migrations
{
    [DbContext(typeof(ApplicationDB))]
    [Migration("20200824185717_seedingdb")]
    partial class seedingdb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CookingProject.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryDescription = "Having a Sunday afternoon family gathering? These meals will keep any conversation going!",
                            CategoryName = "Fried"
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryDescription = "Keeping a balanced diet is always good for the mind & body.",
                            CategoryName = "Keto"
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryDescription = "Breakfast is the most essential meal of the day. Start it right by enjoying one of our meals.",
                            CategoryName = "Breakfast"
                        },
                        new
                        {
                            CategoryID = 4,
                            CategoryDescription = "Craving Italian? We have a variety of restauraunt quality Italian meals to choose from.",
                            CategoryName = "Pizza & Pasta"
                        },
                        new
                        {
                            CategoryID = 5,
                            CategoryDescription = "We have an amazing selection of Spices to choose from!",
                            CategoryName = "Spices"
                        },
                        new
                        {
                            CategoryID = 6,
                            CategoryDescription = "Enjoy the wide selection of meals we offer that are low in calories but not in flavor.",
                            CategoryName = "Healthy Meals"
                        });
                });

            modelBuilder.Entity("CookingProject.Models.Food", b =>
                {
                    b.Property<int>("FoodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageThumb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("isAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("isOnSale")
                        .HasColumnType("bit");

                    b.HasKey("FoodID");

                    b.HasIndex("CategoryID");

                    b.ToTable("GetFoods");

                    b.HasData(
                        new
                        {
                            FoodID = 1,
                            CategoryID = 1,
                            Description = "Crispy Fried Chicken made from scratch",
                            ImageThumb = "jj",
                            ImageURL = "/Images/FriedChicken.jpeg",
                            Name = "Southern Fried Chicken",
                            Price = 9.99m,
                            isAvailable = true,
                            isOnSale = true
                        },
                        new
                        {
                            FoodID = 2,
                            CategoryID = 1,
                            Description = "Fried Soft Shell Crab cooked to golden perfection",
                            ImageThumb = "jj",
                            ImageURL = "/Images/Crab.jpg",
                            Name = "Soft Shell Crab",
                            Price = 74.99m,
                            isAvailable = true,
                            isOnSale = false
                        },
                        new
                        {
                            FoodID = 3,
                            CategoryID = 1,
                            Description = "Very tender, spicy, crispy fish thats full of flavor and made from scratch!",
                            ImageThumb = "ll",
                            ImageURL = "/Images/Fish.jpg",
                            Name = "Lahori Fried Fish",
                            Price = 29.99m,
                            isAvailable = true,
                            isOnSale = false
                        });
                });

            modelBuilder.Entity("CookingProject.Models.ShoppingCartItems", b =>
                {
                    b.Property<int>("ShoppingCartItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("FoodID")
                        .HasColumnType("int");

                    b.Property<string>("ShoppingCartID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShoppingCartItemID");

                    b.HasIndex("FoodID");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("CookingProject.Models.Food", b =>
                {
                    b.HasOne("CookingProject.Models.Category", "GetCategory")
                        .WithMany("GetFoods")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CookingProject.Models.ShoppingCartItems", b =>
                {
                    b.HasOne("CookingProject.Models.Food", "Food")
                        .WithMany()
                        .HasForeignKey("FoodID");
                });
#pragma warning restore 612, 618
        }
    }
}
